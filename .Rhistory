head(subdata)
str(subdata)
subdata <- data[DateTime >= '2014-09-01',]
head(subdata)
rm(data)
rm(subdata)
source('getHistPrices.R')
data <- getHistPrices('SNP', '2014-01-01', '2015-01-01', 'kmarket')
rm(data)
rm(getHistPrices.R)
rm(getHistPrices)
setwd('../')
setwd('../')
source('getHistPrices.R')
data <- getHistPrices('SNP', '2014-01-01', '2015-01-01', 'kmarket')
setwd('../')
rm(getHistPrices)
source('getHistPrices.R')
data <- getHistPrices('SNP', '2014-01-01', '2015-01-01', 'kmarket')
head(data)
datawsj <- getHistPrices('SNP', '2014-01-01', '2015-01-01', 'wsj')
head(datawsj)
key(data)
key(datawsj)
rm(getHistData)
rm(getHistPrices)
setwd('../')
unlink('data', recursive = TRUE)
setwd('../')
unlink('data', recursive = TRUE)
rm(data)
rm(datawsj)
source('getHistPrices.R')
data <- getHistPrices('SNP', '2014-01-01', '2015-01-01', 'kmarket')
data1 <- getHistPrices('SNP', '2014-01-01', '2015-01-01', 'wsj')
head(data)
head(data1)
tail(data)
tail(data1)
rm(getHistPrices)
rm(data)
rm(data1)
quit()
getwd()
dir()
source('getBSEquotes.R')
SNP <- getBSEquotes('SNP', '2014-01-01', '2015-01-17', source = 'kmarket')
EL <- getBSEquotes('EL', '2014-01-01', '2015-01-17', source = 'kmarket')
ATB <- getBSEquotes('ATB', '2014-01-01', '2015-01-17', source = 'kmarket')
ROCE <- getBSEquotes('ROCE', '2014-01-01', '2015-01-17', source = 'kmarket')
head(ROCE)
tail(ROCE)
plot(ROCE)
?with
with(ROCE, plot(DateTime, CLOSE_ADJUSTED))
with(ROCE, plot(DateTime, CLOSE_ADJUSTED, type = 'l'))
with(EL, plot(DateTime, CLOSE_ADJUSTED, type = 'l'))
with(SNP, plot(DateTime, CLOSE_ADJUSTED, type = 'l'))
with(ATB, plot(DateTime, CLOSE_ADJUSTED, type = 'l'))
SNP <- getBSEquotes('SNP', '2014-01-01', '2015-01-18')
source('getBSEquotes.R')
SNP <- getBSEquotes('SNP', '2014-01-01', '2015-01-18')
TLV <- getBSEquotes('TLV', '2014-01-01', '2015-01-18')
ATB <- getBSEquotes('ATB', '2014-01-01', '2015-01-18')
head(ATB)
SNP <- getBSEquotes('SNP', '2014-01-01', '2015-01-18', source = 'kmarket')
ATB <- getBSEquotes('ATB', '2014-01-01', '2015-01-18', source = 'kmarket')
TLV <- getBSEquotes('TLV', '2014-01-01', '2015-01-18', source = 'kmarket')
with(TLV, plot(DtaeTime, CLOSE_ADJUSTED))
with(TLV, plot(DateTime, CLOSE_ADJUSTED))
with(TLV, plot(DateTime, CLOSE_ADJUSTED, type 'l'))
with(TLV, plot(DateTime, CLOSE_ADJUSTED, type = 'l'))
with(SNP, plot(DateTime, CLOSE_ADJUSTED, type = 'l'))
with(ATB, plot(DateTime, CLOSE_ADJUSTED, type = 'l'))
summary(SNP)
str(SNP)
dir()
source('getEUStatData.R')
data <- getEUStatData()
head(data)
librray(ggplot2)
library(ggplot2)
str(mpg)
head(mpg)
qplot(displ, why, data = mpg)
qplot(displ, hwy, data = mpg)
qplot(displ, hwy, data = mpg, color = drv)
?par
?options
qplot(displ, hwy, data = mpg, color = drv, geom = c('point', 'smooth'))
qplot(displ, hwy, data = mpg, geom = c('point', 'smooth'))
qplot(hwy, data = mpg, fill = drv)
qplot(displ, hwy, data = mpg, facets = .~drv)
qplot(DateTime, CLOSE_ADJUSTED, data = SNP)
?qplot
qplot(DateTime, CLOSE_ADJUSTED, data = SNP, geom = 'line')
q <- qqplot(SNP, aes(DateTime, CLOSE_ADJUSTED))
head(SNP)
q <- qqplot(SNP, aes(DateTime, CLOSE_ADJUSTED))
q <- qqplot(as.data.frame(SNP), aes(DateTime, CLOSE_ADJUSTED))
q <- qqplot(SNP, aes(DateTime, CLOSE))
q <- qqplot(SNP, aes(CLOSE_ADJUSTED, DateTime))
q <- qqplot(SNP, aes('CLOSE_ADJUSTED', 'DateTime'))
q <- qqplot(SNP, aes(SNP[,'CLOSE_ADJUSTED'], SNP[,'DateTime']))
q <- qqplot(SNP, aes('CLOSE_ADJUSTED', 'DateTime'))
q <- qqplot(SNP, aes(DateTime, CLOSE_ADJUSTED))
q <- ggplot(SNP, aes(DateTime, CLOSE_ADJUSTED))
str(g)
str(q)
print(q)
q <- q + geom_line()
print(q)
q <- q - geom_line()
q <- q + geom_point()
print(q)
print(q)
install.packages('ggplot2')
print(q)
quit()
install.packages('ISwR')
library('ISwR')
version()
plot(rnorm(1000))
ls
x <- seq(-4,4,0.1)
plot(x, dnorm(x), type='l')
head(q)
rm(q)
head(data)
head(q)
q
source('getBSEquotes.R')
IMP <- getBSEquotes('IMP', '2014-01-01', '2015-02-12')
SNG <- getBSEquotes('SNG', '2014-01-01', '2015-02-12')
SNP <- getBSEquotes('SNP', '2014-01-01', '2015-02-12')
library(plyr)
p <- join_all(list(IMP,SNP,SNG), type = 'inner', by = 'DateTime')
### Computing returns ###
#   Compute simple monthly returns (brute force)
n <= nrow(p)
IMP.ret <- p[,IMP_CLOSE_ADJUSTED[2:n]]/p[,IMP_CLOSE_ADJUSTED[1:n-1]] - 1
SNP.ret <- p[,SNP_CLOSE_ADJUSTED[2:n]]/p[,SNP_CLOSE_ADJUSTED[1:n-1]] - 1
SNG.ret <- p[,SNG_CLOSE_ADJUSTED[2:n]]/p[,SNG_CLOSE_ADJUSTED[1:n-1]] - 1
#   Compute continuously compounded returns
IMP.ccret = log(1 + IMP.ret)
SNP.ccret = log(1 + SNP.ret)
SNG.ccret = log(1 + SNG.ret)
#   Converting into zoo objects
library(PerformanceAnalytics)
IMP.z <- zoo(x = p[,IMP_CLOSE_ADJUSTED], order.by = p[,DateTime])
SNP.z <- zoo(x = p[,SNP_CLOSE_ADJUSTED], order.by = p[,DateTime])
SNG.z <- zoo(x = p[,SNG_CLOSE_ADJUSTED], order.by = p[,DateTime])
p.z <- merge(IMP.z, SNP.z, SNG.z) # Merge stocks into a portfolio
n <- nrow(p)
IMP.ret <- p[,IMP_CLOSE_ADJUSTED[2:n]]/p[,IMP_CLOSE_ADJUSTED[1:n-1]] - 1
SNP.ret <- p[,SNP_CLOSE_ADJUSTED[2:n]]/p[,SNP_CLOSE_ADJUSTED[1:n-1]] - 1
SNG.ret <- p[,SNG_CLOSE_ADJUSTED[2:n]]/p[,SNG_CLOSE_ADJUSTED[1:n-1]] - 1
#   Compute continuously compounded returns
IMP.ccret = log(1 + IMP.ret)
SNP.ccret = log(1 + SNP.ret)
SNG.ccret = log(1 + SNG.ret)
#   Converting into zoo objects
library(PerformanceAnalytics)
IMP.z <- zoo(x = p[,IMP_CLOSE_ADJUSTED], order.by = p[,DateTime])
SNP.z <- zoo(x = p[,SNP_CLOSE_ADJUSTED], order.by = p[,DateTime])
SNG.z <- zoo(x = p[,SNG_CLOSE_ADJUSTED], order.by = p[,DateTime])
head(IMP.ccret)
head(p.z)
head(p)
plot(IMP.z, col = 'black', lwd = 2, lty = 'dotted')
plot(p.z, lwd=c(2,2,2), plot.type="multiple", col=c("black", "blue", 'green'),
lty = c("solid", "dotted", 'solid'),
ylab=c("IMP", "SNP", 'SGN'), main="")
IMP.ret.z = diff(IMP.z)/lag(IMP.z, k=-1)
SNP.ret.z = diff(SNP.z)/lag(SNP.z, k=-1)
SNG.ret.z = diff(SNG.z)/lag(SNG.z, k=-1)
p.ret.z = CalculateReturns(p.z, method="simple")
#   Compute continuously compunded returns using diff() and lag()
IMP.ccret.z = diff(log(IMP.z))
SNP.ccret.z = diff(log(SNP.z))
SNG.ccret.z = diff(log(SNG.z))
p.ccret.z = CalculateReturns(p.z, method="compound")
chart.CumReturns(p.ret.z, lwd=2, main="Growth of $1", legend.loc="topleft")
head(p.ccret.z)
tail(p.ccret.z)
1-pnorm(0.05, 0.1)
1-pnorm(0.05, 0.1, 0.1)
?qnorm
pnorm(0.05, 0.1, 0.1)
1-pnorm(0.1, 0.05, 0.1)
pnorm(-0.1, 0.05, 0.1)
pnorm(0.15, 0.05, 0.1)-(1-pnorm(-0.05,0.05,0.1))
pnorm(0.15, 0.05, 0.1)-pnorm(-0.05,0.05,0.1)
qnorm(0.01, 0.05, 0.1)
qnorm(0.05, 0.05, 0.1)
qnorm(0.95, 0.05, 0.1)
?sample
x.vals <- seq(-0.25,0.35, 100)
plot(x.vals, dnorm(x.vals, 0.04, 0.09))
plot(dnorm(x.vals, 0.04, 0.09), x.vals )
?plot
plot(x.vals, dnorm(x.vals, 0.04, 0.09))
plot(x.vals, dnorm(x.vals, 0.04, 0.09), type = 'l')
plot(x.vals, dnorm(x.vals, 0.05, 0.10), type = 'l')
?seq
x.vals <- seq(-0.25, 0.35, 100)
x.vals <- seq(-0.25, 0.35, length.out = 100)
plot(x.vals, dnorm(x.vals, 0.05, 0.10), type = 'l')
?plot
lines(x.vals, dnorm(x.vals, 0.025, 0.05), type = 'l', lwd = 2, col = 'red')
100000*qnorm(0.01, 0.04, 0.09)
100000*qnorm(0.05, 0.04, 0.09)
100000*(exp(qnorm(0.01, 0.04, 0.09))-1)
100000*(exp(qnorm(0.05, 0.04, 0.09))-1)
(41.29-38.23)/38.23
ln(41.29)-ln(38.23)
log(41.29)-log(38.23)
log(41.74)-log(41.11)
(41.29-38.23+0.1)/38.23
0.1/38.23
log(41.74)-log(41.11)
e(12*0.077)
exp(12*0.077)
0.8*0.08+0.2*0.015
qnorm(0.95, 0.05, 0.1)
qnorm(0.99, 0.05, 0.1)
getwd()
?pnorm
pnorm(70, mean = 80, sd = 10)
qnorm(0.95, mean = 1100, sd = 75)
mean(rnorm(100,mean = 1100,sd = 75))
qnorm(0.95, mean = mean(rnorm(100,mean = 1100,sd = 75)), sd(rnorm(100,mean = 1100,sd = 75))/sqrt(100))
qnorm(0.95, mean = mean(rnorm(100,mean = 1100,sd = 75)), sd(rnorm(100,mean = 1100,sd = 75)))
qnorm(0.95, mean = 1100, sd = 75/sqrt(100))
dbinom(4,5)
dbinom(4,5, o.5)
dbinom(4,5, 0.5)
dbinom(4,5,0.5)
dbinom(4,5,0.5, log = TRUE)
dbinom(4,5,0.5)
dbinom(5,4,0.5)
dbinom(4,5,0.5)
0.5*0.5
0.5*0.5*0.25
0.5*0.5*0.25*0.25
pnorm(16, mean = 15, sd = 10) - pnorm(14, mean = 15, sd = 10)
(1-pnorm(16, mean = 15, sd = 10)) - pnorm(14, mean = 15, sd = 10)
(1-pnorm(14, mean = 15, sd = 10)) - pnorm(16, mean = 15, sd = 10)
(1-pnorm(14, mean = 15, sd = 10))
pnorm(16, mean = 15, sd = 10)
pnorm(14, mean = 15, sd = 10), lower.tail = FALSE
pnorm(14, mean = 15, sd = 10), lower.tail = FALSE)
pnorm(14, mean = 15, sd = 10, lower.tail = FALSE)
pnorm(14, mean = 15, sd = 10/sqrt(100), lower.tail = FALSE)
pnorm(14, mean = 15, sd = 10/sqrt(100), lower.tail = FALSE)-pnorm(16, mean = 15, sd = 10/sqrt(100), lower.tail = FALSE)
pnorm(14, mean = 15, sd = 10/sqrt(100), lower.tail = FALSE)-pnorm(16, mean = 15, sd = 10/sqrt(100))
?ppois
ppois(10, 3*5)
pnorm(93, 100, 10)
qnorm(0.95, 100, 10)
qnorm(0.95, 100, 10/sqrt(50))
dbinom(5,6,1/6)
dbinom(5,6,1/2)
punif(0.51, 0.5, 1/12, lower.tail = FALSE)
?punuf
?punif
pnorm(0.51, 0.5, (1/12)/sqrt(50), lower.tail = FALSE)
pnorm(0.51, 0.5, sqrt(1/12)/sqrt(50), lower.tail = FALSE)
pnorm(0.51, 0.5, sqrt(1/12/50), lower.tail = FALSE)
pnorm(0.51, mean = 0.5, sd = sqrt(1/12/50), lower.tail = FALSE)
round(pnorm(0.51, mean = 0.5, sd = sqrt(1/12/50), lower.tail = FALSE),3)
round(pnorm(.51, mean = 0.5, sd = sqrt(1 / 12 / 100), lower.tail = FALSE), 3)
ppois(20, 2*16.5)
quit
quit()
library(devtools)
install.packages('devtools')
library(devtools)
?version
r.version
r.version()
R.version()
R.Version()
install.packages('KernSmooth')
llibrary(KernSmooth)
library(KernSmooth)
exit()
quit()
set.seed(1)
rpois(5,2)
# Read the data
data <- read.table('household_power_consumption.txt', na.strings = '?', sep = ';',
header = TRUE)
# Create an additional column storing the Date Time data in POSIXlt format
data$DateTime <- strptime(paste(data$Date, data$Time),'%d/%m/%Y %H:%M:%S')
dir()
setwd(dir()[5])
dir()
setwd(dir()[1])
dir()
setwd(dir()[1])
# Read the data
data <- read.table('household_power_consumption.txt', na.strings = '?', sep = ';',
header = TRUE)
# Create an additional column storing the Date Time data in POSIXlt format
data$DateTime <- strptime(paste(data$Date, data$Time),'%d/%m/%Y %H:%M:%S')
par()$mar
# Setting up the plot layout
par(mfcol=c(2,2), mar = c(4.1, 4.1, 4.1, 2.1))
plot(subset(data, DateTime >= '2007-02-01' &
DateTime < '2007-02-03')$DateTime,
subset(data, DateTime >= '2007-02-01' &
DateTime < '2007-02-03')$Global_active_power, main = NA,
ylab = 'Global Active Power', xlab = NA, type = 'l')
?legend
plot(subset(data, DateTime >= '2007-02-01' &
DateTime < '2007-02-03')$DateTime,
subset(data, DateTime >= '2007-02-01' &
DateTime < '2007-02-03')$Sub_metering_1, main = NA,
ylab = 'Energy sub metering', xlab = NA, type = 'l')
lines(subset(data, DateTime >= '2007-02-01' &
DateTime < '2007-02-03')$DateTime,
subset(data, DateTime >= '2007-02-01' &
DateTime < '2007-02-03')$Sub_metering_2, col = 'red')
lines(subset(data, DateTime >= '2007-02-01' &
DateTime < '2007-02-03')$DateTime,
subset(data, DateTime >= '2007-02-01' &
DateTime < '2007-02-03')$Sub_metering_3, col = 'blue')
legend(x = strptime('2007-02-01 17:00:00',
format = '%Y-%m-%d %H:%M:%S'), y = 39,
legend = c('Sub_metering_1','Sub_metering_2','Sub_metering_3'),
col = c('black','red','blue'), lty = c(1,1), cex = 0.9, bty = 'n')
with(subset,{
plot(subset(data, DateTime >= '2007-02-01' &
DateTime < '2007-02-03')$DateTime,
subset(data, DateTime >= '2007-02-01' &
DateTime < '2007-02-03')$Sub_metering_1, main = NA,
ylab = 'Energy sub metering', xlab = NA, type = 'l')
lines(subset(data, DateTime >= '2007-02-01' &
DateTime < '2007-02-03')$DateTime,
subset(data, DateTime >= '2007-02-01' &
DateTime < '2007-02-03')$Sub_metering_2, col = 'red')
lines(subset(data, DateTime >= '2007-02-01' &
DateTime < '2007-02-03')$DateTime,
subset(data, DateTime >= '2007-02-01' &
DateTime < '2007-02-03')$Sub_metering_3, col = 'blue')
legend(x = strptime('2007-02-01 17:00:00',
format = '%Y-%m-%d %H:%M:%S'), y = 39,
legend = c('Sub_metering_1','Sub_metering_2','Sub_metering_3'),
col = c('black','red','blue'), lty = c(1,1), cex = 0.9, bty = 'n')})
with(data,{
plot(subset(data, DateTime >= '2007-02-01' &
DateTime < '2007-02-03')$DateTime,
subset(data, DateTime >= '2007-02-01' &
DateTime < '2007-02-03')$Sub_metering_1, main = NA,
ylab = 'Energy sub metering', xlab = NA, type = 'l')
lines(subset(data, DateTime >= '2007-02-01' &
DateTime < '2007-02-03')$DateTime,
subset(data, DateTime >= '2007-02-01' &
DateTime < '2007-02-03')$Sub_metering_2, col = 'red')
lines(subset(data, DateTime >= '2007-02-01' &
DateTime < '2007-02-03')$DateTime,
subset(data, DateTime >= '2007-02-01' &
DateTime < '2007-02-03')$Sub_metering_3, col = 'blue')
legend(x = strptime('2007-02-01 17:00:00',
format = '%Y-%m-%d %H:%M:%S'), y = 39,
legend = c('Sub_metering_1','Sub_metering_2','Sub_metering_3'),
col = c('black','red','blue'), lty = c(1,1), cex = 0.9, bty = 'n')})
par(mfcol=c(2,2), mar = c(4.1, 4.1, 4.1, 2.1))
par(mfrow=c(1,1)
)
# Open the PNG device and plot the data
png(filename = 'plot4.png', width = 480, height = 480, bg = NA)
plot(subset(data, DateTime >= '2007-02-01' &
DateTime < '2007-02-03')$DateTime,
subset(data, DateTime >= '2007-02-01' &
DateTime < '2007-02-03')$Global_active_power, main = NA,
ylab = 'Global Active Power', xlab = NA, type = 'l')
plot(subset(data, DateTime >= '2007-02-01' &
DateTime < '2007-02-03')$DateTime,
subset(data, DateTime >= '2007-02-01' &
DateTime < '2007-02-03')$Sub_metering_1, main = NA,
ylab = 'Energy sub metering', xlab = NA, type = 'l')
lines(subset(data, DateTime >= '2007-02-01' &
DateTime < '2007-02-03')$DateTime,
subset(data, DateTime >= '2007-02-01' &
DateTime < '2007-02-03')$Sub_metering_2, col = 'red')
lines(subset(data, DateTime >= '2007-02-01' &
DateTime < '2007-02-03')$DateTime,
subset(data, DateTime >= '2007-02-01' &
DateTime < '2007-02-03')$Sub_metering_3, col = 'blue')
legend(x = strptime('2007-02-01 17:00:00',
format = '%Y-%m-%d %H:%M:%S'), y = 39,
legend = c('Sub_metering_1','Sub_metering_2','Sub_metering_3'),
col = c('black','red','blue'), lty = c(1,1), cex = 0.9, bty = 'n')
plot(subset(data, DateTime >= '2007-02-01' &
DateTime < '2007-02-03')$DateTime,
subset(data, DateTime >= '2007-02-01' &
DateTime < '2007-02-03')$Voltage, main = NA,
ylab = 'Voltage', xlab = 'datetime', type = 'l')
plot(subset(data, DateTime >= '2007-02-01' &
DateTime < '2007-02-03')$DateTime,
subset(data, DateTime >= '2007-02-01' &
DateTime < '2007-02-03')$Global_reactive_power, main = NA,
ylab = 'Global_reactive_power', xlab = 'datetime', type = 'l')
dev.off()
par(mfcol=c(2,2), mar = c(4.1, 4.1, 4.1, 2.1))
# Open the PNG device and plot the data
png(filename = 'plot4.png', width = 480, height = 480, bg = NA)
plot(subset(data, DateTime >= '2007-02-01' &
DateTime < '2007-02-03')$DateTime,
subset(data, DateTime >= '2007-02-01' &
DateTime < '2007-02-03')$Global_active_power, main = NA,
ylab = 'Global Active Power', xlab = NA, type = 'l')
plot(subset(data, DateTime >= '2007-02-01' &
DateTime < '2007-02-03')$DateTime,
subset(data, DateTime >= '2007-02-01' &
DateTime < '2007-02-03')$Sub_metering_1, main = NA,
ylab = 'Energy sub metering', xlab = NA, type = 'l')
lines(subset(data, DateTime >= '2007-02-01' &
DateTime < '2007-02-03')$DateTime,
subset(data, DateTime >= '2007-02-01' &
DateTime < '2007-02-03')$Sub_metering_2, col = 'red')
lines(subset(data, DateTime >= '2007-02-01' &
DateTime < '2007-02-03')$DateTime,
subset(data, DateTime >= '2007-02-01' &
DateTime < '2007-02-03')$Sub_metering_3, col = 'blue')
legend(x = strptime('2007-02-01 17:00:00',
format = '%Y-%m-%d %H:%M:%S'), y = 39,
legend = c('Sub_metering_1','Sub_metering_2','Sub_metering_3'),
col = c('black','red','blue'), lty = c(1,1), cex = 0.9, bty = 'n')
plot(subset(data, DateTime >= '2007-02-01' &
DateTime < '2007-02-03')$DateTime,
subset(data, DateTime >= '2007-02-01' &
DateTime < '2007-02-03')$Voltage, main = NA,
ylab = 'Voltage', xlab = 'datetime', type = 'l')
plot(subset(data, DateTime >= '2007-02-01' &
DateTime < '2007-02-03')$DateTime,
subset(data, DateTime >= '2007-02-01' &
DateTime < '2007-02-03')$Global_reactive_power, main = NA,
ylab = 'Global_reactive_power', xlab = 'datetime', type = 'l')
dev.off()
par(mfcol=c(2,2), mar = c(4.1, 4.1, 4.1, 2.1))
png(filename = 'plot4.png', width = 480, height = 480, bg = NA)
plot(subset(data, DateTime >= '2007-02-01' &
DateTime < '2007-02-03')$DateTime,
subset(data, DateTime >= '2007-02-01' &
DateTime < '2007-02-03')$Global_active_power, main = NA,
ylab = 'Global Active Power', xlab = NA, type = 'l')
plot(subset(data, DateTime >= '2007-02-01' &
DateTime < '2007-02-03')$DateTime,
subset(data, DateTime >= '2007-02-01' &
DateTime < '2007-02-03')$Sub_metering_1, main = NA,
ylab = 'Energy sub metering', xlab = NA, type = 'l')
lines(subset(data, DateTime >= '2007-02-01' &
DateTime < '2007-02-03')$DateTime,
subset(data, DateTime >= '2007-02-01' &
DateTime < '2007-02-03')$Sub_metering_2, col = 'red')
lines(subset(data, DateTime >= '2007-02-01' &
DateTime < '2007-02-03')$DateTime,
subset(data, DateTime >= '2007-02-01' &
DateTime < '2007-02-03')$Sub_metering_3, col = 'blue')
legend(x = strptime('2007-02-01 17:00:00',
format = '%Y-%m-%d %H:%M:%S'), y = 39,
legend = c('Sub_metering_1','Sub_metering_2','Sub_metering_3'),
col = c('black','red','blue'), lty = c(1,1), cex = 0.9, bty = 'n')
plot(subset(data, DateTime >= '2007-02-01' &
DateTime < '2007-02-03')$DateTime,
subset(data, DateTime >= '2007-02-01' &
DateTime < '2007-02-03')$Voltage, main = NA,
ylab = 'Voltage', xlab = 'datetime', type = 'l')
plot(subset(data, DateTime >= '2007-02-01' &
DateTime < '2007-02-03')$DateTime,
subset(data, DateTime >= '2007-02-01' &
DateTime < '2007-02-03')$Global_reactive_power, main = NA,
ylab = 'Global_reactive_power', xlab = 'datetime', type = 'l')
dev.off()
png(filename = 'plot4.png', width = 480, height = 480, bg = NA)
par(mfcol=c(2,2), mar = c(4.1, 4.1, 4.1, 2.1))
plot(subset(data, DateTime >= '2007-02-01' &
DateTime < '2007-02-03')$DateTime,
subset(data, DateTime >= '2007-02-01' &
DateTime < '2007-02-03')$Global_active_power, main = NA,
ylab = 'Global Active Power', xlab = NA, type = 'l')
plot(subset(data, DateTime >= '2007-02-01' &
DateTime < '2007-02-03')$DateTime,
subset(data, DateTime >= '2007-02-01' &
DateTime < '2007-02-03')$Sub_metering_1, main = NA,
ylab = 'Energy sub metering', xlab = NA, type = 'l')
lines(subset(data, DateTime >= '2007-02-01' &
DateTime < '2007-02-03')$DateTime,
subset(data, DateTime >= '2007-02-01' &
DateTime < '2007-02-03')$Sub_metering_2, col = 'red')
lines(subset(data, DateTime >= '2007-02-01' &
DateTime < '2007-02-03')$DateTime,
subset(data, DateTime >= '2007-02-01' &
DateTime < '2007-02-03')$Sub_metering_3, col = 'blue')
legend(x = strptime('2007-02-01 17:00:00',
format = '%Y-%m-%d %H:%M:%S'), y = 39,
legend = c('Sub_metering_1','Sub_metering_2','Sub_metering_3'),
col = c('black','red','blue'), lty = c(1,1), cex = 0.9, bty = 'n')
plot(subset(data, DateTime >= '2007-02-01' &
DateTime < '2007-02-03')$DateTime,
subset(data, DateTime >= '2007-02-01' &
DateTime < '2007-02-03')$Voltage, main = NA,
ylab = 'Voltage', xlab = 'datetime', type = 'l')
plot(subset(data, DateTime >= '2007-02-01' &
DateTime < '2007-02-03')$DateTime,
subset(data, DateTime >= '2007-02-01' &
DateTime < '2007-02-03')$Global_reactive_power, main = NA,
ylab = 'Global_reactive_power', xlab = 'datetime', type = 'l')
dev.off()
